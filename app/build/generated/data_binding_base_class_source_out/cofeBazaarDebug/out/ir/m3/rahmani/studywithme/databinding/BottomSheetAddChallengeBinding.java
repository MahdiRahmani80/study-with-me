// Generated by view binder compiler. Do not edit!
package ir.m3.rahmani.studywithme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ir.m3.rahmani.studywithme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetAddChallengeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final NumberPicker coinPicker;

  @NonNull
  public final TextView endChallengeDatetime;

  @NonNull
  public final TextView startChallengeDatetime;

  @NonNull
  public final NumberPicker targetPicker;

  private BottomSheetAddChallengeBinding(@NonNull LinearLayout rootView, @NonNull Button btnSave,
      @NonNull NumberPicker coinPicker, @NonNull TextView endChallengeDatetime,
      @NonNull TextView startChallengeDatetime, @NonNull NumberPicker targetPicker) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.coinPicker = coinPicker;
    this.endChallengeDatetime = endChallengeDatetime;
    this.startChallengeDatetime = startChallengeDatetime;
    this.targetPicker = targetPicker;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetAddChallengeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetAddChallengeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_add_challenge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetAddChallengeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.coin_picker;
      NumberPicker coinPicker = ViewBindings.findChildViewById(rootView, id);
      if (coinPicker == null) {
        break missingId;
      }

      id = R.id.end_challenge_datetime;
      TextView endChallengeDatetime = ViewBindings.findChildViewById(rootView, id);
      if (endChallengeDatetime == null) {
        break missingId;
      }

      id = R.id.start_challenge_datetime;
      TextView startChallengeDatetime = ViewBindings.findChildViewById(rootView, id);
      if (startChallengeDatetime == null) {
        break missingId;
      }

      id = R.id.target_picker;
      NumberPicker targetPicker = ViewBindings.findChildViewById(rootView, id);
      if (targetPicker == null) {
        break missingId;
      }

      return new BottomSheetAddChallengeBinding((LinearLayout) rootView, btnSave, coinPicker,
          endChallengeDatetime, startChallengeDatetime, targetPicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
